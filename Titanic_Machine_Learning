{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "77d90272",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:50.913635Z",
     "iopub.status.busy": "2022-08-25T20:46:50.912711Z",
     "iopub.status.idle": "2022-08-25T20:46:50.932467Z",
     "shell.execute_reply": "2022-08-25T20:46:50.930642Z"
    },
    "papermill": {
     "duration": 0.059338,
     "end_time": "2022-08-25T20:46:50.935958",
     "exception": false,
     "start_time": "2022-08-25T20:46:50.876620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# importing library\n",
    "\n",
    "import numpy as np     # linear algebra\n",
    "import pandas as pd    # data processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "63da602c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:50.993746Z",
     "iopub.status.busy": "2022-08-25T20:46:50.992954Z",
     "iopub.status.idle": "2022-08-25T20:46:50.998967Z",
     "shell.execute_reply": "2022-08-25T20:46:50.997882Z"
    },
    "papermill": {
     "duration": 0.037369,
     "end_time": "2022-08-25T20:46:51.001852",
     "exception": false,
     "start_time": "2022-08-25T20:46:50.964483",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "dpath = \"../input/titanic-datasets/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5726ee80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.056348Z",
     "iopub.status.busy": "2022-08-25T20:46:51.055563Z",
     "iopub.status.idle": "2022-08-25T20:46:51.079252Z",
     "shell.execute_reply": "2022-08-25T20:46:51.077988Z"
    },
    "papermill": {
     "duration": 0.053412,
     "end_time": "2022-08-25T20:46:51.082253",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.028841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic = pd.read_csv(dpath + \"train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "eb22e4a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.138120Z",
     "iopub.status.busy": "2022-08-25T20:46:51.137375Z",
     "iopub.status.idle": "2022-08-25T20:46:51.153437Z",
     "shell.execute_reply": "2022-08-25T20:46:51.151957Z"
    },
    "papermill": {
     "duration": 0.048378,
     "end_time": "2022-08-25T20:46:51.156740",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.108362",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic = pd.read_csv(dpath + \"test.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1972fb28",
   "metadata": {
    "papermill": {
     "duration": 0.025766,
     "end_time": "2022-08-25T20:46:51.209356",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.183590",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Training Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "18aee022",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.264910Z",
     "iopub.status.busy": "2022-08-25T20:46:51.263918Z",
     "iopub.status.idle": "2022-08-25T20:46:51.309672Z",
     "shell.execute_reply": "2022-08-25T20:46:51.308166Z"
    },
    "papermill": {
     "duration": 0.078599,
     "end_time": "2022-08-25T20:46:51.314170",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.235571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "..           ...       ...     ...   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket     Fare Cabin Embarked  \n",
       "0        0         A/5 21171   7.2500   NaN        S  \n",
       "1        0          PC 17599  71.2833   C85        C  \n",
       "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3        0            113803  53.1000  C123        S  \n",
       "4        0            373450   8.0500   NaN        S  \n",
       "..     ...               ...      ...   ...      ...  \n",
       "886      0            211536  13.0000   NaN        S  \n",
       "887      0            112053  30.0000   B42        S  \n",
       "888      2        W./C. 6607  23.4500   NaN        S  \n",
       "889      0            111369  30.0000  C148        C  \n",
       "890      0            370376   7.7500   NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "37a3c93c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.370426Z",
     "iopub.status.busy": "2022-08-25T20:46:51.369461Z",
     "iopub.status.idle": "2022-08-25T20:46:51.396684Z",
     "shell.execute_reply": "2022-08-25T20:46:51.395159Z"
    },
    "papermill": {
     "duration": 0.05918,
     "end_time": "2022-08-25T20:46:51.400580",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.341400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>547</th>\n",
       "      <td>548</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Padro y Manent, Mr. Julian</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SC/PARIS 2146</td>\n",
       "      <td>13.8625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265</th>\n",
       "      <td>266</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Reeves, Mr. David</td>\n",
       "      <td>male</td>\n",
       "      <td>36.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C.A. 17248</td>\n",
       "      <td>10.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>757</th>\n",
       "      <td>758</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Bailey, Mr. Percy Andrew</td>\n",
       "      <td>male</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>29108</td>\n",
       "      <td>11.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>222</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Bracken, Mr. James H</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>220367</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>830</th>\n",
       "      <td>831</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Yasbeck, Mrs. Antoni (Selini Alexander)</td>\n",
       "      <td>female</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2659</td>\n",
       "      <td>14.4542</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Goodwin, Master. William Frederick</td>\n",
       "      <td>male</td>\n",
       "      <td>11.0</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>CA 2144</td>\n",
       "      <td>46.9000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>379</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Betros, Mr. Tannous</td>\n",
       "      <td>male</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2648</td>\n",
       "      <td>4.0125</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>568</th>\n",
       "      <td>569</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Doharr, Mr. Tannous</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2686</td>\n",
       "      <td>7.2292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879</th>\n",
       "      <td>880</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)</td>\n",
       "      <td>female</td>\n",
       "      <td>56.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>11767</td>\n",
       "      <td>83.1583</td>\n",
       "      <td>C50</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Nosworthy, Mr. Richard Cater</td>\n",
       "      <td>male</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A/4. 39886</td>\n",
       "      <td>7.8000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "547          548         1       2   \n",
       "265          266         0       2   \n",
       "757          758         0       2   \n",
       "221          222         0       2   \n",
       "830          831         1       3   \n",
       "59            60         0       3   \n",
       "378          379         0       3   \n",
       "568          569         0       3   \n",
       "879          880         1       1   \n",
       "51            52         0       3   \n",
       "\n",
       "                                              Name     Sex   Age  SibSp  \\\n",
       "547                     Padro y Manent, Mr. Julian    male   NaN      0   \n",
       "265                              Reeves, Mr. David    male  36.0      0   \n",
       "757                       Bailey, Mr. Percy Andrew    male  18.0      0   \n",
       "221                           Bracken, Mr. James H    male  27.0      0   \n",
       "830        Yasbeck, Mrs. Antoni (Selini Alexander)  female  15.0      1   \n",
       "59              Goodwin, Master. William Frederick    male  11.0      5   \n",
       "378                            Betros, Mr. Tannous    male  20.0      0   \n",
       "568                            Doharr, Mr. Tannous    male   NaN      0   \n",
       "879  Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)  female  56.0      0   \n",
       "51                    Nosworthy, Mr. Richard Cater    male  21.0      0   \n",
       "\n",
       "     Parch         Ticket     Fare Cabin Embarked  \n",
       "547      0  SC/PARIS 2146  13.8625   NaN        C  \n",
       "265      0     C.A. 17248  10.5000   NaN        S  \n",
       "757      0          29108  11.5000   NaN        S  \n",
       "221      0         220367  13.0000   NaN        S  \n",
       "830      0           2659  14.4542   NaN        C  \n",
       "59       2        CA 2144  46.9000   NaN        S  \n",
       "378      0           2648   4.0125   NaN        C  \n",
       "568      0           2686   7.2292   NaN        C  \n",
       "879      1          11767  83.1583   C50        C  \n",
       "51       0     A/4. 39886   7.8000   NaN        S  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# random 10 sample data points of training data\n",
    "train_titanic.sample(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "433b8509",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.463159Z",
     "iopub.status.busy": "2022-08-25T20:46:51.461722Z",
     "iopub.status.idle": "2022-08-25T20:46:51.470829Z",
     "shell.execute_reply": "2022-08-25T20:46:51.469374Z"
    },
    "papermill": {
     "duration": 0.04212,
     "end_time": "2022-08-25T20:46:51.473795",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.431675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(891, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "660e6878",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.530357Z",
     "iopub.status.busy": "2022-08-25T20:46:51.528314Z",
     "iopub.status.idle": "2022-08-25T20:46:51.539288Z",
     "shell.execute_reply": "2022-08-25T20:46:51.537523Z"
    },
    "papermill": {
     "duration": 0.041257,
     "end_time": "2022-08-25T20:46:51.542076",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.500819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
       "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "53fd734b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.599101Z",
     "iopub.status.busy": "2022-08-25T20:46:51.597736Z",
     "iopub.status.idle": "2022-08-25T20:46:51.628431Z",
     "shell.execute_reply": "2022-08-25T20:46:51.627092Z"
    },
    "papermill": {
     "duration": 0.063022,
     "end_time": "2022-08-25T20:46:51.631575",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.568553",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Name         891 non-null    object \n",
      " 4   Sex          891 non-null    object \n",
      " 5   Age          714 non-null    float64\n",
      " 6   SibSp        891 non-null    int64  \n",
      " 7   Parch        891 non-null    int64  \n",
      " 8   Ticket       891 non-null    object \n",
      " 9   Fare         891 non-null    float64\n",
      " 10  Cabin        204 non-null    object \n",
      " 11  Embarked     889 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 83.7+ KB\n"
     ]
    }
   ],
   "source": [
    "# basic information of dataset\n",
    "train_titanic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "160fd90e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.685659Z",
     "iopub.status.busy": "2022-08-25T20:46:51.684664Z",
     "iopub.status.idle": "2022-08-25T20:46:51.695807Z",
     "shell.execute_reply": "2022-08-25T20:46:51.694801Z"
    },
    "papermill": {
     "duration": 0.041093,
     "end_time": "2022-08-25T20:46:51.698531",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.657438",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId      0\n",
       "Survived         0\n",
       "Pclass           0\n",
       "Name             0\n",
       "Sex              0\n",
       "Age            177\n",
       "SibSp            0\n",
       "Parch            0\n",
       "Ticket           0\n",
       "Fare             0\n",
       "Cabin          687\n",
       "Embarked         2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# columnwise total null values\n",
    "train_titanic.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "df1f9471",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.760594Z",
     "iopub.status.busy": "2022-08-25T20:46:51.759547Z",
     "iopub.status.idle": "2022-08-25T20:46:51.798909Z",
     "shell.execute_reply": "2022-08-25T20:46:51.797581Z"
    },
    "papermill": {
     "duration": 0.073676,
     "end_time": "2022-08-25T20:46:51.802081",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.728405",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# statistical inforamtion of numeric data\n",
    "train_titanic.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a3da2d3d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.863493Z",
     "iopub.status.busy": "2022-08-25T20:46:51.862220Z",
     "iopub.status.idle": "2022-08-25T20:46:51.873577Z",
     "shell.execute_reply": "2022-08-25T20:46:51.871945Z"
    },
    "papermill": {
     "duration": 0.045546,
     "end_time": "2022-08-25T20:46:51.876704",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.831158",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        1\n",
       "1        2\n",
       "2        3\n",
       "3        4\n",
       "4        5\n",
       "      ... \n",
       "886    887\n",
       "887    888\n",
       "888    889\n",
       "889    890\n",
       "890    891\n",
       "Name: PassengerId, Length: 891, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.PassengerId"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0fb3a19e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:51.935955Z",
     "iopub.status.busy": "2022-08-25T20:46:51.934756Z",
     "iopub.status.idle": "2022-08-25T20:46:51.943179Z",
     "shell.execute_reply": "2022-08-25T20:46:51.941777Z"
    },
    "papermill": {
     "duration": 0.040947,
     "end_time": "2022-08-25T20:46:51.945788",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.904841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# removing PassengerId column because it is not useful in any analysis\n",
    "train_titanic.drop('PassengerId',inplace=True, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "87aa4e32",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.004889Z",
     "iopub.status.busy": "2022-08-25T20:46:52.003948Z",
     "iopub.status.idle": "2022-08-25T20:46:52.013473Z",
     "shell.execute_reply": "2022-08-25T20:46:52.012013Z"
    },
    "papermill": {
     "duration": 0.041369,
     "end_time": "2022-08-25T20:46:52.016074",
     "exception": false,
     "start_time": "2022-08-25T20:46:51.974705",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Survived.unique()    # unique class present in Survived column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3c552b6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.076560Z",
     "iopub.status.busy": "2022-08-25T20:46:52.075752Z",
     "iopub.status.idle": "2022-08-25T20:46:52.086827Z",
     "shell.execute_reply": "2022-08-25T20:46:52.085565Z"
    },
    "papermill": {
     "duration": 0.044681,
     "end_time": "2022-08-25T20:46:52.089390",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.044709",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    549\n",
       "1    342\n",
       "Name: Survived, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Survived.value_counts()     # value count of unique class in Survived column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "adfdc7cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.148796Z",
     "iopub.status.busy": "2022-08-25T20:46:52.147388Z",
     "iopub.status.idle": "2022-08-25T20:46:52.156654Z",
     "shell.execute_reply": "2022-08-25T20:46:52.155539Z"
    },
    "papermill": {
     "duration": 0.043114,
     "end_time": "2022-08-25T20:46:52.159805",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.116691",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 1, 2])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Pclass.unique()       # unique class present in Pclass column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0133c22d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.220337Z",
     "iopub.status.busy": "2022-08-25T20:46:52.219313Z",
     "iopub.status.idle": "2022-08-25T20:46:52.229294Z",
     "shell.execute_reply": "2022-08-25T20:46:52.228103Z"
    },
    "papermill": {
     "duration": 0.044362,
     "end_time": "2022-08-25T20:46:52.232337",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.187975",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3    491\n",
       "1    216\n",
       "2    184\n",
       "Name: Pclass, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Pclass.value_counts()       # value count of unique class in Pclass column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f09c146f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.295721Z",
     "iopub.status.busy": "2022-08-25T20:46:52.294825Z",
     "iopub.status.idle": "2022-08-25T20:46:52.304349Z",
     "shell.execute_reply": "2022-08-25T20:46:52.302973Z"
    },
    "papermill": {
     "duration": 0.043996,
     "end_time": "2022-08-25T20:46:52.307481",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.263485",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "891"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Name.nunique()        # count unique name from Name column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "207992fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.367656Z",
     "iopub.status.busy": "2022-08-25T20:46:52.367161Z",
     "iopub.status.idle": "2022-08-25T20:46:52.374767Z",
     "shell.execute_reply": "2022-08-25T20:46:52.373447Z"
    },
    "papermill": {
     "duration": 0.040053,
     "end_time": "2022-08-25T20:46:52.377284",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.337231",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# removing Name column because each name is unique and it won't be used in any analysis\n",
    "train_titanic.drop(\"Name\", axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "63a519c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.436941Z",
     "iopub.status.busy": "2022-08-25T20:46:52.436441Z",
     "iopub.status.idle": "2022-08-25T20:46:52.447666Z",
     "shell.execute_reply": "2022-08-25T20:46:52.446030Z"
    },
    "papermill": {
     "duration": 0.045234,
     "end_time": "2022-08-25T20:46:52.450567",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.405333",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['male', 'female'], dtype=object)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Sex.unique()       # unique class present in Sex column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "da35f5f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.513583Z",
     "iopub.status.busy": "2022-08-25T20:46:52.512360Z",
     "iopub.status.idle": "2022-08-25T20:46:52.522387Z",
     "shell.execute_reply": "2022-08-25T20:46:52.520977Z"
    },
    "papermill": {
     "duration": 0.045474,
     "end_time": "2022-08-25T20:46:52.525887",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.480413",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Sex.replace(['male', 'female'], [1,0], inplace=True)      # replacing gender with boolean values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "024d651e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.592979Z",
     "iopub.status.busy": "2022-08-25T20:46:52.592494Z",
     "iopub.status.idle": "2022-08-25T20:46:52.609429Z",
     "shell.execute_reply": "2022-08-25T20:46:52.608104Z"
    },
    "papermill": {
     "duration": 0.053235,
     "end_time": "2022-08-25T20:46:52.612538",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.559303",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex   Age  SibSp  Parch            Ticket     Fare Cabin  \\\n",
       "0         0       3    1  22.0      1      0         A/5 21171   7.2500   NaN   \n",
       "1         1       1    0  38.0      1      0          PC 17599  71.2833   C85   \n",
       "2         1       3    0  26.0      0      0  STON/O2. 3101282   7.9250   NaN   \n",
       "3         1       1    0  35.0      1      0            113803  53.1000  C123   \n",
       "4         0       3    1  35.0      0      0            373450   8.0500   NaN   \n",
       "\n",
       "  Embarked  \n",
       "0        S  \n",
       "1        C  \n",
       "2        S  \n",
       "3        S  \n",
       "4        S  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9498f9eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.681594Z",
     "iopub.status.busy": "2022-08-25T20:46:52.680885Z",
     "iopub.status.idle": "2022-08-25T20:46:52.691183Z",
     "shell.execute_reply": "2022-08-25T20:46:52.689690Z"
    },
    "papermill": {
     "duration": 0.047082,
     "end_time": "2022-08-25T20:46:52.694174",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.647092",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "177"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "67324a3e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.761666Z",
     "iopub.status.busy": "2022-08-25T20:46:52.761181Z",
     "iopub.status.idle": "2022-08-25T20:46:52.771088Z",
     "shell.execute_reply": "2022-08-25T20:46:52.769133Z"
    },
    "papermill": {
     "duration": 0.047936,
     "end_time": "2022-08-25T20:46:52.773866",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.725930",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.69911764705882"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ca25d561",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.832117Z",
     "iopub.status.busy": "2022-08-25T20:46:52.831575Z",
     "iopub.status.idle": "2022-08-25T20:46:52.841855Z",
     "shell.execute_reply": "2022-08-25T20:46:52.840515Z"
    },
    "papermill": {
     "duration": 0.042527,
     "end_time": "2022-08-25T20:46:52.844644",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.802117",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28.0"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "68a026f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.907113Z",
     "iopub.status.busy": "2022-08-25T20:46:52.906486Z",
     "iopub.status.idle": "2022-08-25T20:46:52.914517Z",
     "shell.execute_reply": "2022-08-25T20:46:52.913257Z"
    },
    "papermill": {
     "duration": 0.042345,
     "end_time": "2022-08-25T20:46:52.917127",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.874782",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Age.fillna(train_titanic.Age.mean(), inplace = True)        # filling mean of Age column in null value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ca6c74c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:52.978401Z",
     "iopub.status.busy": "2022-08-25T20:46:52.977279Z",
     "iopub.status.idle": "2022-08-25T20:46:52.992864Z",
     "shell.execute_reply": "2022-08-25T20:46:52.991470Z"
    },
    "papermill": {
     "duration": 0.048925,
     "end_time": "2022-08-25T20:46:52.995889",
     "exception": false,
     "start_time": "2022-08-25T20:46:52.946964",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Survived, Pclass, Sex, Age, SibSp, Parch, Ticket, Fare, Cabin, Embarked]\n",
       "Index: []"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic[train_titanic.Age == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "72c0d5e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.056886Z",
     "iopub.status.busy": "2022-08-25T20:46:53.055664Z",
     "iopub.status.idle": "2022-08-25T20:46:53.064942Z",
     "shell.execute_reply": "2022-08-25T20:46:53.063430Z"
    },
    "papermill": {
     "duration": 0.042805,
     "end_time": "2022-08-25T20:46:53.068047",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.025242",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('float64')"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ed282275",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.130328Z",
     "iopub.status.busy": "2022-08-25T20:46:53.129822Z",
     "iopub.status.idle": "2022-08-25T20:46:53.137852Z",
     "shell.execute_reply": "2022-08-25T20:46:53.136027Z"
    },
    "papermill": {
     "duration": 0.042844,
     "end_time": "2022-08-25T20:46:53.140896",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.098052",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Age = train_titanic.Age.astype('int64')         # changing data type of Age column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "426b7454",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.202602Z",
     "iopub.status.busy": "2022-08-25T20:46:53.201839Z",
     "iopub.status.idle": "2022-08-25T20:46:53.210811Z",
     "shell.execute_reply": "2022-08-25T20:46:53.209324Z"
    },
    "papermill": {
     "duration": 0.043485,
     "end_time": "2022-08-25T20:46:53.213646",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.170161",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('int64')"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d9a72547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.276165Z",
     "iopub.status.busy": "2022-08-25T20:46:53.275220Z",
     "iopub.status.idle": "2022-08-25T20:46:53.293553Z",
     "shell.execute_reply": "2022-08-25T20:46:53.292442Z"
    },
    "papermill": {
     "duration": 0.05305,
     "end_time": "2022-08-25T20:46:53.296675",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.243625",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>248738</td>\n",
       "      <td>29.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>305</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>113781</td>\n",
       "      <td>151.5500</td>\n",
       "      <td>C22 C26</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2666</td>\n",
       "      <td>19.2583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>644</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2666</td>\n",
       "      <td>19.2583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>250649</td>\n",
       "      <td>14.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>803</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2625</td>\n",
       "      <td>8.5167</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>831</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29106</td>\n",
       "      <td>18.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Survived  Pclass  Sex  Age  SibSp  Parch  Ticket      Fare    Cabin  \\\n",
       "78          1       2    1    0      0      2  248738   29.0000      NaN   \n",
       "305         1       1    1    0      1      2  113781  151.5500  C22 C26   \n",
       "469         1       3    0    0      2      1    2666   19.2583      NaN   \n",
       "644         1       3    0    0      2      1    2666   19.2583      NaN   \n",
       "755         1       2    1    0      1      1  250649   14.5000      NaN   \n",
       "803         1       3    1    0      0      1    2625    8.5167      NaN   \n",
       "831         1       2    1    0      1      1   29106   18.7500      NaN   \n",
       "\n",
       "    Embarked  \n",
       "78         S  \n",
       "305        S  \n",
       "469        C  \n",
       "644        C  \n",
       "755        S  \n",
       "803        C  \n",
       "831        S  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic[train_titanic.Age == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "86f321bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.369049Z",
     "iopub.status.busy": "2022-08-25T20:46:53.367636Z",
     "iopub.status.idle": "2022-08-25T20:46:53.377199Z",
     "shell.execute_reply": "2022-08-25T20:46:53.375798Z"
    },
    "papermill": {
     "duration": 0.048951,
     "end_time": "2022-08-25T20:46:53.379968",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.331017",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.544332210998878"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8aee5205",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.443228Z",
     "iopub.status.busy": "2022-08-25T20:46:53.442700Z",
     "iopub.status.idle": "2022-08-25T20:46:53.451206Z",
     "shell.execute_reply": "2022-08-25T20:46:53.449752Z"
    },
    "papermill": {
     "duration": 0.044013,
     "end_time": "2022-08-25T20:46:53.454538",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.410525",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Age.replace(0, train_titanic.Age.mean(), inplace = True)        # replacing mean with 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "98fb43d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.517551Z",
     "iopub.status.busy": "2022-08-25T20:46:53.517035Z",
     "iopub.status.idle": "2022-08-25T20:46:53.525189Z",
     "shell.execute_reply": "2022-08-25T20:46:53.524110Z"
    },
    "papermill": {
     "duration": 0.04269,
     "end_time": "2022-08-25T20:46:53.527816",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.485126",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.776442565069573"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "40b20483",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.588702Z",
     "iopub.status.busy": "2022-08-25T20:46:53.587629Z",
     "iopub.status.idle": "2022-08-25T20:46:53.595493Z",
     "shell.execute_reply": "2022-08-25T20:46:53.594396Z"
    },
    "papermill": {
     "duration": 0.041196,
     "end_time": "2022-08-25T20:46:53.598055",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.556859",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('float64')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Age.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "55a47747",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.661058Z",
     "iopub.status.busy": "2022-08-25T20:46:53.660104Z",
     "iopub.status.idle": "2022-08-25T20:46:53.667263Z",
     "shell.execute_reply": "2022-08-25T20:46:53.665707Z"
    },
    "papermill": {
     "duration": 0.042766,
     "end_time": "2022-08-25T20:46:53.670734",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.627968",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Age = train_titanic.Age.astype('int64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "4f8d6b89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.736293Z",
     "iopub.status.busy": "2022-08-25T20:46:53.735754Z",
     "iopub.status.idle": "2022-08-25T20:46:53.749409Z",
     "shell.execute_reply": "2022-08-25T20:46:53.748047Z"
    },
    "papermill": {
     "duration": 0.049462,
     "end_time": "2022-08-25T20:46:53.751956",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.702494",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Survived, Pclass, Sex, Age, SibSp, Parch, Ticket, Fare, Cabin, Embarked]\n",
       "Index: []"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic[train_titanic.Age == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "a3773e67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.817258Z",
     "iopub.status.busy": "2022-08-25T20:46:53.816472Z",
     "iopub.status.idle": "2022-08-25T20:46:53.833639Z",
     "shell.execute_reply": "2022-08-25T20:46:53.832666Z"
    },
    "papermill": {
     "duration": 0.05311,
     "end_time": "2022-08-25T20:46:53.836359",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.783249",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex  Age  SibSp  Parch            Ticket     Fare Cabin  \\\n",
       "0         0       3    1   22      1      0         A/5 21171   7.2500   NaN   \n",
       "1         1       1    0   38      1      0          PC 17599  71.2833   C85   \n",
       "2         1       3    0   26      0      0  STON/O2. 3101282   7.9250   NaN   \n",
       "3         1       1    0   35      1      0            113803  53.1000  C123   \n",
       "4         0       3    1   35      0      0            373450   8.0500   NaN   \n",
       "\n",
       "  Embarked  \n",
       "0        S  \n",
       "1        C  \n",
       "2        S  \n",
       "3        S  \n",
       "4        S  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "29066aad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.905479Z",
     "iopub.status.busy": "2022-08-25T20:46:53.904090Z",
     "iopub.status.idle": "2022-08-25T20:46:53.913506Z",
     "shell.execute_reply": "2022-08-25T20:46:53.912060Z"
    },
    "papermill": {
     "duration": 0.046629,
     "end_time": "2022-08-25T20:46:53.916347",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.869718",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 0, 3, 4, 2, 5, 8])"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.SibSp.unique()         # unique class present in SibSp column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4bbea1ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:53.982336Z",
     "iopub.status.busy": "2022-08-25T20:46:53.980823Z",
     "iopub.status.idle": "2022-08-25T20:46:53.990900Z",
     "shell.execute_reply": "2022-08-25T20:46:53.989566Z"
    },
    "papermill": {
     "duration": 0.045307,
     "end_time": "2022-08-25T20:46:53.993586",
     "exception": false,
     "start_time": "2022-08-25T20:46:53.948279",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    608\n",
       "1    209\n",
       "2     28\n",
       "4     18\n",
       "3     16\n",
       "8      7\n",
       "5      5\n",
       "Name: SibSp, dtype: int64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.SibSp.value_counts()          # value count of unique class in SibSp column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "f715fe8b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.058981Z",
     "iopub.status.busy": "2022-08-25T20:46:54.058177Z",
     "iopub.status.idle": "2022-08-25T20:46:54.067985Z",
     "shell.execute_reply": "2022-08-25T20:46:54.066678Z"
    },
    "papermill": {
     "duration": 0.045109,
     "end_time": "2022-08-25T20:46:54.070503",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.025394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2, 5, 3, 4, 6])"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Parch.unique()         # unique class present in Parch column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "b15a8efe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.131917Z",
     "iopub.status.busy": "2022-08-25T20:46:54.130654Z",
     "iopub.status.idle": "2022-08-25T20:46:54.141637Z",
     "shell.execute_reply": "2022-08-25T20:46:54.140261Z"
    },
    "papermill": {
     "duration": 0.044962,
     "end_time": "2022-08-25T20:46:54.144654",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.099692",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    678\n",
       "1    118\n",
       "2     80\n",
       "5      5\n",
       "3      5\n",
       "4      4\n",
       "6      1\n",
       "Name: Parch, dtype: int64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Parch.value_counts()          # value count of unique class in Parch column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "056c85e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.209798Z",
     "iopub.status.busy": "2022-08-25T20:46:54.209300Z",
     "iopub.status.idle": "2022-08-25T20:46:54.217445Z",
     "shell.execute_reply": "2022-08-25T20:46:54.216447Z"
    },
    "papermill": {
     "duration": 0.043067,
     "end_time": "2022-08-25T20:46:54.219854",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.176787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "681"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Ticket.nunique() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "ef109079",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.284955Z",
     "iopub.status.busy": "2022-08-25T20:46:54.283831Z",
     "iopub.status.idle": "2022-08-25T20:46:54.294200Z",
     "shell.execute_reply": "2022-08-25T20:46:54.292597Z"
    },
    "papermill": {
     "duration": 0.046283,
     "end_time": "2022-08-25T20:46:54.297187",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.250904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([7, 6, 5, 4, 3, 2, 1])"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Ticket.value_counts().unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "d8a463b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.364187Z",
     "iopub.status.busy": "2022-08-25T20:46:54.362754Z",
     "iopub.status.idle": "2022-08-25T20:46:54.371960Z",
     "shell.execute_reply": "2022-08-25T20:46:54.370560Z"
    },
    "papermill": {
     "duration": 0.045718,
     "end_time": "2022-08-25T20:46:54.374754",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.329036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# here we don't have information of allocation of ticket and services so we can assume that a person having same ticket gets \n",
    "# same service so it shouldn't impect on result that's why I am removing this Ticket column \n",
    "\n",
    "train_titanic.drop('Ticket', axis = 1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "64f77ceb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.440358Z",
     "iopub.status.busy": "2022-08-25T20:46:54.439472Z",
     "iopub.status.idle": "2022-08-25T20:46:54.451135Z",
     "shell.execute_reply": "2022-08-25T20:46:54.449915Z"
    },
    "papermill": {
     "duration": 0.047313,
     "end_time": "2022-08-25T20:46:54.454099",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.406786",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       7.2500\n",
       "1      71.2833\n",
       "2       7.9250\n",
       "3      53.1000\n",
       "4       8.0500\n",
       "        ...   \n",
       "886    13.0000\n",
       "887    30.0000\n",
       "888    23.4500\n",
       "889    30.0000\n",
       "890     7.7500\n",
       "Name: Fare, Length: 891, dtype: float64"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Fare  # this was working in jupyter notebook as train_titanic.Fare.info() here I removed info() because of error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "6704e8d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.522191Z",
     "iopub.status.busy": "2022-08-25T20:46:54.521379Z",
     "iopub.status.idle": "2022-08-25T20:46:54.543317Z",
     "shell.execute_reply": "2022-08-25T20:46:54.541829Z"
    },
    "papermill": {
     "duration": 0.059173,
     "end_time": "2022-08-25T20:46:54.546038",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.486865",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>B94</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>277</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>302</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>413</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>481</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>633</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>674</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>806</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>A36</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>815</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>B102</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>822</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Survived  Pclass  Sex  Age  SibSp  Parch  Fare Cabin Embarked\n",
       "179         0       3    1   36      0      0   0.0   NaN        S\n",
       "263         0       1    1   40      0      0   0.0   B94        S\n",
       "271         1       3    1   25      0      0   0.0   NaN        S\n",
       "277         0       2    1   29      0      0   0.0   NaN        S\n",
       "302         0       3    1   19      0      0   0.0   NaN        S\n",
       "413         0       2    1   29      0      0   0.0   NaN        S\n",
       "466         0       2    1   29      0      0   0.0   NaN        S\n",
       "481         0       2    1   29      0      0   0.0   NaN        S\n",
       "597         0       3    1   49      0      0   0.0   NaN        S\n",
       "633         0       1    1   29      0      0   0.0   NaN        S\n",
       "674         0       2    1   29      0      0   0.0   NaN        S\n",
       "732         0       2    1   29      0      0   0.0   NaN        S\n",
       "806         0       1    1   39      0      0   0.0   A36        S\n",
       "815         0       1    1   29      0      0   0.0  B102        S\n",
       "822         0       1    1   38      0      0   0.0   NaN        S"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic[train_titanic.Fare == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "07b2facb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.615352Z",
     "iopub.status.busy": "2022-08-25T20:46:54.614670Z",
     "iopub.status.idle": "2022-08-25T20:46:54.625332Z",
     "shell.execute_reply": "2022-08-25T20:46:54.623856Z"
    },
    "papermill": {
     "duration": 0.048735,
     "end_time": "2022-08-25T20:46:54.628554",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.579819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32.204207968574636"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Fare.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "da627cd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.700225Z",
     "iopub.status.busy": "2022-08-25T20:46:54.699755Z",
     "iopub.status.idle": "2022-08-25T20:46:54.706643Z",
     "shell.execute_reply": "2022-08-25T20:46:54.705493Z"
    },
    "papermill": {
     "duration": 0.045099,
     "end_time": "2022-08-25T20:46:54.709283",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.664184",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Fare.replace(0, train_titanic.Fare.mean(), inplace = True)      # replacing mean of Fare column with 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "e3cb20b3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.773796Z",
     "iopub.status.busy": "2022-08-25T20:46:54.773072Z",
     "iopub.status.idle": "2022-08-25T20:46:54.781140Z",
     "shell.execute_reply": "2022-08-25T20:46:54.779625Z"
    },
    "papermill": {
     "duration": 0.043525,
     "end_time": "2022-08-25T20:46:54.783705",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.740180",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32.74636635188397"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Fare.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "d23c0404",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.846865Z",
     "iopub.status.busy": "2022-08-25T20:46:54.846135Z",
     "iopub.status.idle": "2022-08-25T20:46:54.856717Z",
     "shell.execute_reply": "2022-08-25T20:46:54.855385Z"
    },
    "papermill": {
     "duration": 0.045264,
     "end_time": "2022-08-25T20:46:54.859380",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.814116",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived      0\n",
       "Pclass        0\n",
       "Sex           0\n",
       "Age           0\n",
       "SibSp         0\n",
       "Parch         0\n",
       "Fare          0\n",
       "Cabin       687\n",
       "Embarked      2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "2519841e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.923090Z",
     "iopub.status.busy": "2022-08-25T20:46:54.922358Z",
     "iopub.status.idle": "2022-08-25T20:46:54.932162Z",
     "shell.execute_reply": "2022-08-25T20:46:54.930749Z"
    },
    "papermill": {
     "duration": 0.044496,
     "end_time": "2022-08-25T20:46:54.934794",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.890298",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       NaN\n",
       "1       C85\n",
       "2       NaN\n",
       "3      C123\n",
       "4       NaN\n",
       "       ... \n",
       "886     NaN\n",
       "887     B42\n",
       "888     NaN\n",
       "889    C148\n",
       "890     NaN\n",
       "Name: Cabin, Length: 891, dtype: object"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Cabin    # this was working in jupyter notebook as train_titanic.Cabin.info() here I removed info() because of error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "a36bcb8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:54.997854Z",
     "iopub.status.busy": "2022-08-25T20:46:54.997139Z",
     "iopub.status.idle": "2022-08-25T20:46:55.003683Z",
     "shell.execute_reply": "2022-08-25T20:46:55.002723Z"
    },
    "papermill": {
     "duration": 0.040981,
     "end_time": "2022-08-25T20:46:55.006248",
     "exception": false,
     "start_time": "2022-08-25T20:46:54.965267",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# there is no use of cabin in predicting so better to drop.\n",
    "train_titanic.drop('Cabin', axis = 1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6a5ff649",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.075407Z",
     "iopub.status.busy": "2022-08-25T20:46:55.074914Z",
     "iopub.status.idle": "2022-08-25T20:46:55.082748Z",
     "shell.execute_reply": "2022-08-25T20:46:55.081844Z"
    },
    "papermill": {
     "duration": 0.047153,
     "end_time": "2022-08-25T20:46:55.084983",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.037830",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['S', 'C', 'Q', nan], dtype=object)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Embarked.unique()        # unique class present in Embarked column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "490057cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.151201Z",
     "iopub.status.busy": "2022-08-25T20:46:55.149824Z",
     "iopub.status.idle": "2022-08-25T20:46:55.159266Z",
     "shell.execute_reply": "2022-08-25T20:46:55.158334Z"
    },
    "papermill": {
     "duration": 0.045376,
     "end_time": "2022-08-25T20:46:55.161763",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.116387",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "S    644\n",
       "C    168\n",
       "Q     77\n",
       "Name: Embarked, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Embarked.value_counts()          # value count of unique class in Embarked column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "6c4d3d89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.226923Z",
     "iopub.status.busy": "2022-08-25T20:46:55.225366Z",
     "iopub.status.idle": "2022-08-25T20:46:55.235188Z",
     "shell.execute_reply": "2022-08-25T20:46:55.234094Z"
    },
    "papermill": {
     "duration": 0.045114,
     "end_time": "2022-08-25T20:46:55.237757",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.192643",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    S\n",
       "dtype: object"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic.Embarked.mode()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "7a7d6a92",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.306975Z",
     "iopub.status.busy": "2022-08-25T20:46:55.306134Z",
     "iopub.status.idle": "2022-08-25T20:46:55.312085Z",
     "shell.execute_reply": "2022-08-25T20:46:55.311100Z"
    },
    "papermill": {
     "duration": 0.043562,
     "end_time": "2022-08-25T20:46:55.314607",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.271045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Embarked.fillna('S', inplace=True)        # Filling 'S' in place of blank(nan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "04634e56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.380337Z",
     "iopub.status.busy": "2022-08-25T20:46:55.379824Z",
     "iopub.status.idle": "2022-08-25T20:46:55.387459Z",
     "shell.execute_reply": "2022-08-25T20:46:55.386352Z"
    },
    "papermill": {
     "duration": 0.043201,
     "end_time": "2022-08-25T20:46:55.389632",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.346431",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_titanic.Embarked.replace(['S', 'C', 'Q'], [0, 1, 2], inplace = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3525876",
   "metadata": {
    "papermill": {
     "duration": 0.034173,
     "end_time": "2022-08-25T20:46:55.456020",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.421847",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Final Train Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "af317efe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.522933Z",
     "iopub.status.busy": "2022-08-25T20:46:55.521988Z",
     "iopub.status.idle": "2022-08-25T20:46:55.540050Z",
     "shell.execute_reply": "2022-08-25T20:46:55.538891Z"
    },
    "papermill": {
     "duration": 0.055454,
     "end_time": "2022-08-25T20:46:55.542788",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.487334",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Survived  Pclass  Sex  Age  SibSp  Parch     Fare  Embarked\n",
       "0           0       3    1   22      1      0   7.2500         0\n",
       "1           1       1    0   38      1      0  71.2833         1\n",
       "2           1       3    0   26      0      0   7.9250         0\n",
       "3           1       1    0   35      1      0  53.1000         0\n",
       "4           0       3    1   35      0      0   8.0500         0\n",
       "..        ...     ...  ...  ...    ...    ...      ...       ...\n",
       "886         0       2    1   27      0      0  13.0000         0\n",
       "887         1       1    0   19      0      0  30.0000         0\n",
       "888         0       3    0   29      1      2  23.4500         0\n",
       "889         1       1    1   26      0      0  30.0000         1\n",
       "890         0       3    1   32      0      0   7.7500         2\n",
       "\n",
       "[891 rows x 8 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_titanic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c3c93fa9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.611500Z",
     "iopub.status.busy": "2022-08-25T20:46:55.610547Z",
     "iopub.status.idle": "2022-08-25T20:46:55.625950Z",
     "shell.execute_reply": "2022-08-25T20:46:55.623841Z"
    },
    "papermill": {
     "duration": 0.054077,
     "end_time": "2022-08-25T20:46:55.629547",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.575470",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 8 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   Survived  891 non-null    int64  \n",
      " 1   Pclass    891 non-null    int64  \n",
      " 2   Sex       891 non-null    int64  \n",
      " 3   Age       891 non-null    int64  \n",
      " 4   SibSp     891 non-null    int64  \n",
      " 5   Parch     891 non-null    int64  \n",
      " 6   Fare      891 non-null    float64\n",
      " 7   Embarked  891 non-null    int64  \n",
      "dtypes: float64(1), int64(7)\n",
      "memory usage: 55.8 KB\n"
     ]
    }
   ],
   "source": [
    "train_titanic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "a4ecab4b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.695160Z",
     "iopub.status.busy": "2022-08-25T20:46:55.694233Z",
     "iopub.status.idle": "2022-08-25T20:46:55.718781Z",
     "shell.execute_reply": "2022-08-25T20:46:55.717749Z"
    },
    "papermill": {
     "duration": 0.060261,
     "end_time": "2022-08-25T20:46:55.721587",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.661326",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>3</td>\n",
       "      <td>Kelly, Mr. James</td>\n",
       "      <td>male</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330911</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>3</td>\n",
       "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>363272</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>2</td>\n",
       "      <td>Myles, Mr. Thomas Francis</td>\n",
       "      <td>male</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>240276</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>3</td>\n",
       "      <td>Wirz, Mr. Albert</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>315154</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>3</td>\n",
       "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3101298</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>413</th>\n",
       "      <td>1305</td>\n",
       "      <td>3</td>\n",
       "      <td>Spector, Mr. Woolf</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A.5. 3236</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>414</th>\n",
       "      <td>1306</td>\n",
       "      <td>1</td>\n",
       "      <td>Oliva y Ocana, Dona. Fermina</td>\n",
       "      <td>female</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17758</td>\n",
       "      <td>108.9000</td>\n",
       "      <td>C105</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>1307</td>\n",
       "      <td>3</td>\n",
       "      <td>Saether, Mr. Simon Sivertsen</td>\n",
       "      <td>male</td>\n",
       "      <td>38.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SOTON/O.Q. 3101262</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>416</th>\n",
       "      <td>1308</td>\n",
       "      <td>3</td>\n",
       "      <td>Ware, Mr. Frederick</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>359309</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>417</th>\n",
       "      <td>1309</td>\n",
       "      <td>3</td>\n",
       "      <td>Peter, Master. Michael J</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2668</td>\n",
       "      <td>22.3583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>418 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Pclass                                          Name  \\\n",
       "0            892       3                              Kelly, Mr. James   \n",
       "1            893       3              Wilkes, Mrs. James (Ellen Needs)   \n",
       "2            894       2                     Myles, Mr. Thomas Francis   \n",
       "3            895       3                              Wirz, Mr. Albert   \n",
       "4            896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)   \n",
       "..           ...     ...                                           ...   \n",
       "413         1305       3                            Spector, Mr. Woolf   \n",
       "414         1306       1                  Oliva y Ocana, Dona. Fermina   \n",
       "415         1307       3                  Saether, Mr. Simon Sivertsen   \n",
       "416         1308       3                           Ware, Mr. Frederick   \n",
       "417         1309       3                      Peter, Master. Michael J   \n",
       "\n",
       "        Sex   Age  SibSp  Parch              Ticket      Fare Cabin Embarked  \n",
       "0      male  34.5      0      0              330911    7.8292   NaN        Q  \n",
       "1    female  47.0      1      0              363272    7.0000   NaN        S  \n",
       "2      male  62.0      0      0              240276    9.6875   NaN        Q  \n",
       "3      male  27.0      0      0              315154    8.6625   NaN        S  \n",
       "4    female  22.0      1      1             3101298   12.2875   NaN        S  \n",
       "..      ...   ...    ...    ...                 ...       ...   ...      ...  \n",
       "413    male   NaN      0      0           A.5. 3236    8.0500   NaN        S  \n",
       "414  female  39.0      0      0            PC 17758  108.9000  C105        C  \n",
       "415    male  38.5      0      0  SOTON/O.Q. 3101262    7.2500   NaN        S  \n",
       "416    male   NaN      0      0              359309    8.0500   NaN        S  \n",
       "417    male   NaN      1      1                2668   22.3583   NaN        C  \n",
       "\n",
       "[418 rows x 11 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "4f5620fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.789067Z",
     "iopub.status.busy": "2022-08-25T20:46:55.788171Z",
     "iopub.status.idle": "2022-08-25T20:46:55.803727Z",
     "shell.execute_reply": "2022-08-25T20:46:55.801467Z"
    },
    "papermill": {
     "duration": 0.05335,
     "end_time": "2022-08-25T20:46:55.807899",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.754549",
     "status": "completed"
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 11 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Pclass       418 non-null    int64  \n",
      " 2   Name         418 non-null    object \n",
      " 3   Sex          418 non-null    object \n",
      " 4   Age          332 non-null    float64\n",
      " 5   SibSp        418 non-null    int64  \n",
      " 6   Parch        418 non-null    int64  \n",
      " 7   Ticket       418 non-null    object \n",
      " 8   Fare         417 non-null    float64\n",
      " 9   Cabin        91 non-null     object \n",
      " 10  Embarked     418 non-null    object \n",
      "dtypes: float64(2), int64(4), object(5)\n",
      "memory usage: 36.0+ KB\n"
     ]
    }
   ],
   "source": [
    "test_titanic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "55cf0d60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.875713Z",
     "iopub.status.busy": "2022-08-25T20:46:55.875242Z",
     "iopub.status.idle": "2022-08-25T20:46:55.881311Z",
     "shell.execute_reply": "2022-08-25T20:46:55.879895Z"
    },
    "papermill": {
     "duration": 0.042857,
     "end_time": "2022-08-25T20:46:55.883934",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.841077",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "PassengerId = test_titanic.PassengerId         # initialize PassengerId for upcoming use"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "df336bca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:55.952451Z",
     "iopub.status.busy": "2022-08-25T20:46:55.951948Z",
     "iopub.status.idle": "2022-08-25T20:46:55.958725Z",
     "shell.execute_reply": "2022-08-25T20:46:55.957590Z"
    },
    "papermill": {
     "duration": 0.044463,
     "end_time": "2022-08-25T20:46:55.961132",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.916669",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], inplace = True, axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "390da62d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.029320Z",
     "iopub.status.busy": "2022-08-25T20:46:56.028532Z",
     "iopub.status.idle": "2022-08-25T20:46:56.043671Z",
     "shell.execute_reply": "2022-08-25T20:46:56.042657Z"
    },
    "papermill": {
     "duration": 0.052688,
     "end_time": "2022-08-25T20:46:56.046113",
     "exception": false,
     "start_time": "2022-08-25T20:46:55.993425",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>male</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Pclass     Sex   Age  SibSp  Parch     Fare Embarked\n",
       "0       3    male  34.5      0      0   7.8292        Q\n",
       "1       3  female  47.0      1      0   7.0000        S\n",
       "2       2    male  62.0      0      0   9.6875        Q\n",
       "3       3    male  27.0      0      0   8.6625        S\n",
       "4       3  female  22.0      1      1  12.2875        S"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "284a8732",
   "metadata": {
    "papermill": {
     "duration": 0.03283,
     "end_time": "2022-08-25T20:46:56.111963",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.079133",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Doing same cleaning and manipulation of data as Train dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "1357f172",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.180031Z",
     "iopub.status.busy": "2022-08-25T20:46:56.179133Z",
     "iopub.status.idle": "2022-08-25T20:46:56.186727Z",
     "shell.execute_reply": "2022-08-25T20:46:56.185494Z"
    },
    "papermill": {
     "duration": 0.044688,
     "end_time": "2022-08-25T20:46:56.189064",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.144376",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 2, 1])"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Pclass.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "924be794",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.255896Z",
     "iopub.status.busy": "2022-08-25T20:46:56.254663Z",
     "iopub.status.idle": "2022-08-25T20:46:56.264724Z",
     "shell.execute_reply": "2022-08-25T20:46:56.263342Z"
    },
    "papermill": {
     "duration": 0.046147,
     "end_time": "2022-08-25T20:46:56.267259",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.221112",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3    218\n",
       "1    107\n",
       "2     93\n",
       "Name: Pclass, dtype: int64"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Pclass.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "35952952",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.336659Z",
     "iopub.status.busy": "2022-08-25T20:46:56.335696Z",
     "iopub.status.idle": "2022-08-25T20:46:56.344225Z",
     "shell.execute_reply": "2022-08-25T20:46:56.343034Z"
    },
    "papermill": {
     "duration": 0.045446,
     "end_time": "2022-08-25T20:46:56.346827",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.301381",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['male', 'female'], dtype=object)"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Sex.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "4d6254e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.415217Z",
     "iopub.status.busy": "2022-08-25T20:46:56.414305Z",
     "iopub.status.idle": "2022-08-25T20:46:56.421879Z",
     "shell.execute_reply": "2022-08-25T20:46:56.420959Z"
    },
    "papermill": {
     "duration": 0.044358,
     "end_time": "2022-08-25T20:46:56.424656",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.380298",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.Sex.replace(['male', 'female'], [1,0], inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "f142ca63",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.493362Z",
     "iopub.status.busy": "2022-08-25T20:46:56.492848Z",
     "iopub.status.idle": "2022-08-25T20:46:56.509245Z",
     "shell.execute_reply": "2022-08-25T20:46:56.507904Z"
    },
    "papermill": {
     "duration": 0.053797,
     "end_time": "2022-08-25T20:46:56.511944",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.458147",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "30.272590361445783"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "b3fabf7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.580430Z",
     "iopub.status.busy": "2022-08-25T20:46:56.579879Z",
     "iopub.status.idle": "2022-08-25T20:46:56.586656Z",
     "shell.execute_reply": "2022-08-25T20:46:56.585331Z"
    },
    "papermill": {
     "duration": 0.044887,
     "end_time": "2022-08-25T20:46:56.589579",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.544692",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.Age.fillna(test_titanic.Age.mean(), inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "1600b7cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.661101Z",
     "iopub.status.busy": "2022-08-25T20:46:56.660584Z",
     "iopub.status.idle": "2022-08-25T20:46:56.667564Z",
     "shell.execute_reply": "2022-08-25T20:46:56.666575Z"
    },
    "papermill": {
     "duration": 0.045064,
     "end_time": "2022-08-25T20:46:56.669919",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.624855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('float64')"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Age.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "52e5eab8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.739596Z",
     "iopub.status.busy": "2022-08-25T20:46:56.738636Z",
     "iopub.status.idle": "2022-08-25T20:46:56.745934Z",
     "shell.execute_reply": "2022-08-25T20:46:56.744883Z"
    },
    "papermill": {
     "duration": 0.04494,
     "end_time": "2022-08-25T20:46:56.748833",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.703893",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.Age = test_titanic.Age.astype('int64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "55a1f3ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.817311Z",
     "iopub.status.busy": "2022-08-25T20:46:56.816367Z",
     "iopub.status.idle": "2022-08-25T20:46:56.824568Z",
     "shell.execute_reply": "2022-08-25T20:46:56.823312Z"
    },
    "papermill": {
     "duration": 0.045773,
     "end_time": "2022-08-25T20:46:56.827240",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.781467",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('int64')"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Age.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "2b9098e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.898369Z",
     "iopub.status.busy": "2022-08-25T20:46:56.897425Z",
     "iopub.status.idle": "2022-08-25T20:46:56.914314Z",
     "shell.execute_reply": "2022-08-25T20:46:56.912767Z"
    },
    "papermill": {
     "duration": 0.056948,
     "end_time": "2022-08-25T20:46:56.918579",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.861631",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>14.400</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>27.750</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>281</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13.775</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.350</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>354</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>20.575</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Pclass  Sex  Age  SibSp  Parch    Fare Embarked\n",
       "201       3    1    0      0      2  14.400        S\n",
       "250       2    0    0      1      2  27.750        S\n",
       "281       3    1    0      1      1  13.775        S\n",
       "307       3    1    0      0      1   9.350        S\n",
       "354       3    0    0      1      2  20.575        S"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic[test_titanic.Age == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "6393b80a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:56.989746Z",
     "iopub.status.busy": "2022-08-25T20:46:56.988838Z",
     "iopub.status.idle": "2022-08-25T20:46:56.996154Z",
     "shell.execute_reply": "2022-08-25T20:46:56.995014Z"
    },
    "papermill": {
     "duration": 0.04621,
     "end_time": "2022-08-25T20:46:56.999349",
     "exception": false,
     "start_time": "2022-08-25T20:46:56.953139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.Age.replace(0, int(test_titanic.Age.mean()), inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "6b529ecd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.071738Z",
     "iopub.status.busy": "2022-08-25T20:46:57.070850Z",
     "iopub.status.idle": "2022-08-25T20:46:57.079032Z",
     "shell.execute_reply": "2022-08-25T20:46:57.077764Z"
    },
    "papermill": {
     "duration": 0.048084,
     "end_time": "2022-08-25T20:46:57.081575",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.033491",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "76"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Age.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "d5b496a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.152460Z",
     "iopub.status.busy": "2022-08-25T20:46:57.151675Z",
     "iopub.status.idle": "2022-08-25T20:46:57.161195Z",
     "shell.execute_reply": "2022-08-25T20:46:57.159918Z"
    },
    "papermill": {
     "duration": 0.04913,
     "end_time": "2022-08-25T20:46:57.164280",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.115150",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    283\n",
       "1    110\n",
       "2     14\n",
       "3      4\n",
       "4      4\n",
       "8      2\n",
       "5      1\n",
       "Name: SibSp, dtype: int64"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.SibSp.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "2a5bd396",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.237261Z",
     "iopub.status.busy": "2022-08-25T20:46:57.236472Z",
     "iopub.status.idle": "2022-08-25T20:46:57.244532Z",
     "shell.execute_reply": "2022-08-25T20:46:57.243272Z"
    },
    "papermill": {
     "duration": 0.047593,
     "end_time": "2022-08-25T20:46:57.247034",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.199441",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2, 3, 4, 5, 8])"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.SibSp.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "43f374df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.320978Z",
     "iopub.status.busy": "2022-08-25T20:46:57.320190Z",
     "iopub.status.idle": "2022-08-25T20:46:57.329345Z",
     "shell.execute_reply": "2022-08-25T20:46:57.328006Z"
    },
    "papermill": {
     "duration": 0.04839,
     "end_time": "2022-08-25T20:46:57.331904",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.283514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 3, 2, 4, 6, 5, 9])"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Parch.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "e25355a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.403969Z",
     "iopub.status.busy": "2022-08-25T20:46:57.403185Z",
     "iopub.status.idle": "2022-08-25T20:46:57.414826Z",
     "shell.execute_reply": "2022-08-25T20:46:57.413370Z"
    },
    "papermill": {
     "duration": 0.050708,
     "end_time": "2022-08-25T20:46:57.417538",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.366830",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    324\n",
       "1     52\n",
       "2     33\n",
       "3      3\n",
       "4      2\n",
       "9      2\n",
       "6      1\n",
       "5      1\n",
       "Name: Parch, dtype: int64"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Parch.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "594d0296",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.492296Z",
     "iopub.status.busy": "2022-08-25T20:46:57.490880Z",
     "iopub.status.idle": "2022-08-25T20:46:57.507921Z",
     "shell.execute_reply": "2022-08-25T20:46:57.506101Z"
    },
    "papermill": {
     "duration": 0.057284,
     "end_time": "2022-08-25T20:46:57.511189",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.453905",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 7 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   Pclass    418 non-null    int64  \n",
      " 1   Sex       418 non-null    int64  \n",
      " 2   Age       418 non-null    int64  \n",
      " 3   SibSp     418 non-null    int64  \n",
      " 4   Parch     418 non-null    int64  \n",
      " 5   Fare      417 non-null    float64\n",
      " 6   Embarked  418 non-null    object \n",
      "dtypes: float64(1), int64(5), object(1)\n",
      "memory usage: 23.0+ KB\n"
     ]
    }
   ],
   "source": [
    "test_titanic.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "f082cf61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.583069Z",
     "iopub.status.busy": "2022-08-25T20:46:57.582291Z",
     "iopub.status.idle": "2022-08-25T20:46:57.592760Z",
     "shell.execute_reply": "2022-08-25T20:46:57.591341Z"
    },
    "papermill": {
     "duration": 0.050397,
     "end_time": "2022-08-25T20:46:57.595788",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.545391",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        7.8292\n",
       "1        7.0000\n",
       "2        9.6875\n",
       "3        8.6625\n",
       "4       12.2875\n",
       "         ...   \n",
       "413      8.0500\n",
       "414    108.9000\n",
       "415      7.2500\n",
       "416      8.0500\n",
       "417     22.3583\n",
       "Name: Fare, Length: 418, dtype: float64"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Fare    # this was working in jupyter notebook as train_titanic.Fare.info() here I removed info() because of error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "43a6430f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.677198Z",
     "iopub.status.busy": "2022-08-25T20:46:57.676260Z",
     "iopub.status.idle": "2022-08-25T20:46:57.685139Z",
     "shell.execute_reply": "2022-08-25T20:46:57.683466Z"
    },
    "papermill": {
     "duration": 0.055447,
     "end_time": "2022-08-25T20:46:57.690105",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.634658",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.Fare.fillna(test_titanic.Fare.mean(), inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "5a4ab3e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.783224Z",
     "iopub.status.busy": "2022-08-25T20:46:57.782446Z",
     "iopub.status.idle": "2022-08-25T20:46:57.790767Z",
     "shell.execute_reply": "2022-08-25T20:46:57.789371Z"
    },
    "papermill": {
     "duration": 0.057539,
     "end_time": "2022-08-25T20:46:57.793491",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.735952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Q', 'S', 'C'], dtype=object)"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Embarked.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "4ab4050c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.866389Z",
     "iopub.status.busy": "2022-08-25T20:46:57.865602Z",
     "iopub.status.idle": "2022-08-25T20:46:57.877140Z",
     "shell.execute_reply": "2022-08-25T20:46:57.875485Z"
    },
    "papermill": {
     "duration": 0.052359,
     "end_time": "2022-08-25T20:46:57.880495",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.828136",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    S\n",
       "dtype: object"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic.Embarked.mode()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "43588513",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:57.951981Z",
     "iopub.status.busy": "2022-08-25T20:46:57.951091Z",
     "iopub.status.idle": "2022-08-25T20:46:57.958642Z",
     "shell.execute_reply": "2022-08-25T20:46:57.957720Z"
    },
    "papermill": {
     "duration": 0.046504,
     "end_time": "2022-08-25T20:46:57.961322",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.914818",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_titanic.Embarked.replace(['S', 'C', 'Q'], [0, 1, 2], inplace = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "924f0316",
   "metadata": {
    "papermill": {
     "duration": 0.034296,
     "end_time": "2022-08-25T20:46:58.030109",
     "exception": false,
     "start_time": "2022-08-25T20:46:57.995813",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Final Test Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "c2e6571b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:58.103409Z",
     "iopub.status.busy": "2022-08-25T20:46:58.102325Z",
     "iopub.status.idle": "2022-08-25T20:46:58.120507Z",
     "shell.execute_reply": "2022-08-25T20:46:58.119165Z"
    },
    "papermill": {
     "duration": 0.057597,
     "end_time": "2022-08-25T20:46:58.123236",
     "exception": false,
     "start_time": "2022-08-25T20:46:58.065639",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>413</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>414</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>108.9000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>416</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>417</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22.3583</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>418 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Pclass  Sex  Age  SibSp  Parch      Fare  Embarked\n",
       "0         3    1   34      0      0    7.8292         2\n",
       "1         3    0   47      1      0    7.0000         0\n",
       "2         2    1   62      0      0    9.6875         2\n",
       "3         3    1   27      0      0    8.6625         0\n",
       "4         3    0   22      1      1   12.2875         0\n",
       "..      ...  ...  ...    ...    ...       ...       ...\n",
       "413       3    1   30      0      0    8.0500         0\n",
       "414       1    0   39      0      0  108.9000         1\n",
       "415       3    1   38      0      0    7.2500         0\n",
       "416       3    1   30      0      0    8.0500         0\n",
       "417       3    1   30      1      1   22.3583         1\n",
       "\n",
       "[418 rows x 7 columns]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_titanic"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba550dfd",
   "metadata": {
    "papermill": {
     "duration": 0.035331,
     "end_time": "2022-08-25T20:46:58.193192",
     "exception": false,
     "start_time": "2022-08-25T20:46:58.157861",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Machine Learning"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad67a2b6",
   "metadata": {
    "papermill": {
     "duration": 0.033683,
     "end_time": "2022-08-25T20:46:58.262329",
     "exception": false,
     "start_time": "2022-08-25T20:46:58.228646",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## importing libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "7fc3812e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:58.336519Z",
     "iopub.status.busy": "2022-08-25T20:46:58.335596Z",
     "iopub.status.idle": "2022-08-25T20:46:59.721821Z",
     "shell.execute_reply": "2022-08-25T20:46:59.720537Z"
    },
    "papermill": {
     "duration": 1.427654,
     "end_time": "2022-08-25T20:46:59.724742",
     "exception": false,
     "start_time": "2022-08-25T20:46:58.297088",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split, RandomizedSearchCV\n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "1b5768bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:59.792198Z",
     "iopub.status.busy": "2022-08-25T20:46:59.791385Z",
     "iopub.status.idle": "2022-08-25T20:46:59.798449Z",
     "shell.execute_reply": "2022-08-25T20:46:59.797610Z"
    },
    "papermill": {
     "duration": 0.043039,
     "end_time": "2022-08-25T20:46:59.800704",
     "exception": false,
     "start_time": "2022-08-25T20:46:59.757665",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = train_titanic.drop('Survived', axis = 1)\n",
    "y = train_titanic.Survived"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "6d21bafc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:46:59.869161Z",
     "iopub.status.busy": "2022-08-25T20:46:59.868723Z",
     "iopub.status.idle": "2022-08-25T20:46:59.873738Z",
     "shell.execute_reply": "2022-08-25T20:46:59.872605Z"
    },
    "papermill": {
     "duration": 0.043009,
     "end_time": "2022-08-25T20:46:59.876171",
     "exception": false,
     "start_time": "2022-08-25T20:46:59.833162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "lr_model = LogisticRegression()\n",
    "dtc_model = DecisionTreeClassifier()\n",
    "rfc_model = RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e6bac41",
   "metadata": {
    "papermill": {
     "duration": 0.032262,
     "end_time": "2022-08-25T20:46:59.941068",
     "exception": false,
     "start_time": "2022-08-25T20:46:59.908806",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Splitting training data into train set and test sets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "4d9e5e0c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:00.009154Z",
     "iopub.status.busy": "2022-08-25T20:47:00.008316Z",
     "iopub.status.idle": "2022-08-25T20:47:00.015554Z",
     "shell.execute_reply": "2022-08-25T20:47:00.014720Z"
    },
    "papermill": {
     "duration": 0.04405,
     "end_time": "2022-08-25T20:47:00.017851",
     "exception": false,
     "start_time": "2022-08-25T20:46:59.973801",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5b0a91e",
   "metadata": {
    "papermill": {
     "duration": 0.033054,
     "end_time": "2022-08-25T20:47:00.084717",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.051663",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Model Training/Fitting -> Prediction -> Performance Testing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd5fe1e0",
   "metadata": {
    "papermill": {
     "duration": 0.033268,
     "end_time": "2022-08-25T20:47:00.152290",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.119022",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## ***Logistic Regression Model***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "7ab96fb8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:00.225014Z",
     "iopub.status.busy": "2022-08-25T20:47:00.224177Z",
     "iopub.status.idle": "2022-08-25T20:47:00.267307Z",
     "shell.execute_reply": "2022-08-25T20:47:00.265956Z"
    },
    "papermill": {
     "duration": 0.080685,
     "end_time": "2022-08-25T20:47:00.269949",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.189264",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr_model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "03d59fea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:00.340832Z",
     "iopub.status.busy": "2022-08-25T20:47:00.340023Z",
     "iopub.status.idle": "2022-08-25T20:47:00.357881Z",
     "shell.execute_reply": "2022-08-25T20:47:00.355593Z"
    },
    "papermill": {
     "duration": 0.058267,
     "end_time": "2022-08-25T20:47:00.362408",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.304141",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of Logistic Regression Model : 79.33 % \n",
      "\n",
      "Confusion Matrix : \n",
      " [[88 17]\n",
      " [20 54]] \n",
      "\n",
      "Classification Report : \n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.81      0.84      0.83       105\n",
      "           1       0.76      0.73      0.74        74\n",
      "\n",
      "    accuracy                           0.79       179\n",
      "   macro avg       0.79      0.78      0.79       179\n",
      "weighted avg       0.79      0.79      0.79       179\n",
      " \n",
      "\n"
     ]
    }
   ],
   "source": [
    "lr_y_predict = lr_model.predict(X_test)\n",
    "\n",
    "lr_accuracy = (100 * accuracy_score(y_test, lr_y_predict)).round(2)\n",
    "print(f\"Accuracy of Logistic Regression Model : {lr_accuracy} %\", \"\\n\")\n",
    "print(\"Confusion Matrix : \\n\", confusion_matrix(y_test, lr_y_predict), \"\\n\")\n",
    "print(\"Classification Report : \\n\", classification_report(y_test, lr_y_predict),\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bfd4fdd",
   "metadata": {
    "papermill": {
     "duration": 0.032312,
     "end_time": "2022-08-25T20:47:00.428095",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.395783",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## ***Decision Tree Classifier***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "0b88872c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:00.495788Z",
     "iopub.status.busy": "2022-08-25T20:47:00.495103Z",
     "iopub.status.idle": "2022-08-25T20:47:00.508286Z",
     "shell.execute_reply": "2022-08-25T20:47:00.507041Z"
    },
    "papermill": {
     "duration": 0.050074,
     "end_time": "2022-08-25T20:47:00.510744",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.460670",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtc_model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "6de11217",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:00.585135Z",
     "iopub.status.busy": "2022-08-25T20:47:00.584307Z",
     "iopub.status.idle": "2022-08-25T20:47:00.602047Z",
     "shell.execute_reply": "2022-08-25T20:47:00.600102Z"
    },
    "papermill": {
     "duration": 0.060045,
     "end_time": "2022-08-25T20:47:00.605395",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.545350",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of Decision Tree Model : 78.77 % \n",
      "\n",
      "Confusion Matrix : \n",
      " [[89 16]\n",
      " [22 52]] \n",
      "\n",
      "Classification Report : \n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.80      0.85      0.82       105\n",
      "           1       0.76      0.70      0.73        74\n",
      "\n",
      "    accuracy                           0.79       179\n",
      "   macro avg       0.78      0.78      0.78       179\n",
      "weighted avg       0.79      0.79      0.79       179\n",
      " \n",
      "\n"
     ]
    }
   ],
   "source": [
    "dtc_y_predict = dtc_model.predict(X_test)\n",
    "\n",
    "dtc_accuracy = (100 * accuracy_score(y_test, dtc_y_predict)).round(2)\n",
    "print(f\"Accuracy of Decision Tree Model : {dtc_accuracy} % \\n\" )\n",
    "print(\"Confusion Matrix : \\n\", confusion_matrix(y_test, dtc_y_predict), \"\\n\")\n",
    "print(\"Classification Report : \\n\", classification_report(y_test, dtc_y_predict), \"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ae1e416",
   "metadata": {
    "papermill": {
     "duration": 0.123946,
     "end_time": "2022-08-25T20:47:00.765557",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.641611",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## ***Random Forest Classifier***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "ca91e79f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:00.841638Z",
     "iopub.status.busy": "2022-08-25T20:47:00.840867Z",
     "iopub.status.idle": "2022-08-25T20:47:01.054713Z",
     "shell.execute_reply": "2022-08-25T20:47:01.053780Z"
    },
    "papermill": {
     "duration": 0.252979,
     "end_time": "2022-08-25T20:47:01.057521",
     "exception": false,
     "start_time": "2022-08-25T20:47:00.804542",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc_model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "754122ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.134417Z",
     "iopub.status.busy": "2022-08-25T20:47:01.133904Z",
     "iopub.status.idle": "2022-08-25T20:47:01.169188Z",
     "shell.execute_reply": "2022-08-25T20:47:01.168074Z"
    },
    "papermill": {
     "duration": 0.078232,
     "end_time": "2022-08-25T20:47:01.172267",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.094035",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of Random Forest Model : 78.77 % \n",
      "\n",
      "Confusion Matrix : \n",
      " [[88 17]\n",
      " [21 53]] \n",
      "\n",
      "Classification Report : \n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.81      0.84      0.82       105\n",
      "           1       0.76      0.72      0.74        74\n",
      "\n",
      "    accuracy                           0.79       179\n",
      "   macro avg       0.78      0.78      0.78       179\n",
      "weighted avg       0.79      0.79      0.79       179\n",
      " \n",
      "\n"
     ]
    }
   ],
   "source": [
    "rfc_y_predict = rfc_model.predict(X_test)\n",
    "\n",
    "rfc_accuracy = (100 * accuracy_score(y_test, rfc_y_predict)).round(2)\n",
    "print(f\"Accuracy of Random Forest Model : {rfc_accuracy} % \\n\")\n",
    "print(\"Confusion Matrix : \\n\", confusion_matrix(y_test, rfc_y_predict), \"\\n\")\n",
    "print(\"Classification Report : \\n\", classification_report(y_test, rfc_y_predict),\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d74b66c",
   "metadata": {
    "papermill": {
     "duration": 0.038403,
     "end_time": "2022-08-25T20:47:01.249592",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.211189",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "c1f8ad2f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.327836Z",
     "iopub.status.busy": "2022-08-25T20:47:01.327109Z",
     "iopub.status.idle": "2022-08-25T20:47:01.332467Z",
     "shell.execute_reply": "2022-08-25T20:47:01.331109Z"
    },
    "papermill": {
     "duration": 0.049156,
     "end_time": "2022-08-25T20:47:01.335943",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.286787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Model = ['LogisticRegression', 'DecisionTreeClassifier', 'RandomForestClassifier']\n",
    "Accuracy = [lr_accuracy, dtc_accuracy, rfc_accuracy]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "f263e6dd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.410382Z",
     "iopub.status.busy": "2022-08-25T20:47:01.409563Z",
     "iopub.status.idle": "2022-08-25T20:47:01.424359Z",
     "shell.execute_reply": "2022-08-25T20:47:01.422987Z"
    },
    "papermill": {
     "duration": 0.055818,
     "end_time": "2022-08-25T20:47:01.427433",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.371615",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Accuracy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LogisticRegression</td>\n",
       "      <td>79.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>DecisionTreeClassifier</td>\n",
       "      <td>78.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>RandomForestClassifier</td>\n",
       "      <td>78.77</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Model  Accuracy\n",
       "0      LogisticRegression     79.33\n",
       "1  DecisionTreeClassifier     78.77\n",
       "2  RandomForestClassifier     78.77"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "acc_df = pd.DataFrame({'Model': Model, 'Accuracy': Accuracy})\n",
    "acc_df.sort_values(by = 'Accuracy', ascending=False, ignore_index=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be40a25b",
   "metadata": {
    "papermill": {
     "duration": 0.035719,
     "end_time": "2022-08-25T20:47:01.503093",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.467374",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Prediction output for the test dataset using Random Forest Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "e821a26b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.579514Z",
     "iopub.status.busy": "2022-08-25T20:47:01.578887Z",
     "iopub.status.idle": "2022-08-25T20:47:01.613561Z",
     "shell.execute_reply": "2022-08-25T20:47:01.612140Z"
    },
    "papermill": {
     "duration": 0.076969,
     "end_time": "2022-08-25T20:47:01.616414",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.539445",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "rfc_y_predict_final = rfc_model.predict(test_titanic)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "62ea6fcd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.694203Z",
     "iopub.status.busy": "2022-08-25T20:47:01.693043Z",
     "iopub.status.idle": "2022-08-25T20:47:01.699263Z",
     "shell.execute_reply": "2022-08-25T20:47:01.698211Z"
    },
    "papermill": {
     "duration": 0.049478,
     "end_time": "2022-08-25T20:47:01.701965",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.652487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "result = pd.DataFrame({'PassengerId': PassengerId, 'Survived': rfc_y_predict_final})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "c3e19a4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.778902Z",
     "iopub.status.busy": "2022-08-25T20:47:01.778069Z",
     "iopub.status.idle": "2022-08-25T20:47:01.790708Z",
     "shell.execute_reply": "2022-08-25T20:47:01.789617Z"
    },
    "papermill": {
     "duration": 0.05342,
     "end_time": "2022-08-25T20:47:01.793449",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.740029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>413</th>\n",
       "      <td>1305</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>414</th>\n",
       "      <td>1306</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>1307</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>416</th>\n",
       "      <td>1308</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>417</th>\n",
       "      <td>1309</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>418 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived\n",
       "0            892         0\n",
       "1            893         0\n",
       "2            894         0\n",
       "3            895         1\n",
       "4            896         0\n",
       "..           ...       ...\n",
       "413         1305         0\n",
       "414         1306         1\n",
       "415         1307         0\n",
       "416         1308         0\n",
       "417         1309         0\n",
       "\n",
       "[418 rows x 2 columns]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "6fb7b0a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-25T20:47:01.871829Z",
     "iopub.status.busy": "2022-08-25T20:47:01.870890Z",
     "iopub.status.idle": "2022-08-25T20:47:01.882905Z",
     "shell.execute_reply": "2022-08-25T20:47:01.881872Z"
    },
    "papermill": {
     "duration": 0.053992,
     "end_time": "2022-08-25T20:47:01.885778",
     "exception": false,
     "start_time": "2022-08-25T20:47:01.831786",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "result.to_csv('result.zip', index = False, compression = {'method':'zip', 'archive_name':'result.csv'})"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 24.860323,
   "end_time": "2022-08-25T20:47:02.949071",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-08-25T20:46:38.088748",
   "version": "2.3.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
